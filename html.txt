<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title> Calculator</title>
  <link href="style.css" rel="stylesheet" type="text/css">
</head>
<body>
  <div class="calculator">
    <h2>Calculator</h2>

    <label for="num1">Number 1:</label>
    <input type="number" id="num1" placeholder="Enter first number">
    <label for="num2">Number 2:</label>
    <input type="number" id="num2" placeholder="Enter second number">

    <label for="n">n (for sequences or nCr/nPr):</label>
    <input type="number" id="n" placeholder="Enter n value">

    <label for="r">r (for nCr/nPr):</label>
    <input type="number" id="r" placeholder="Enter r value">

    <button onclick="calculateLCM()">LCM</button>
    <button onclick="calculateHCF()">HCF</button>
    <button onclick="calculateAP()">AP (nth term)</button>
    <button onclick="calculateGP()">GP (nth term)</button>
    <button onclick="calculateHP()">HP (nth term)</button>
    <button onclick="calculateNCR()">nCr</button>
    <button onclick="calculateNPR()">nPr</button>

    <p id="result"></p>
  </div>

  <script>//LCM
    function calculateLCM() {
      const num1 = parseInt(document.getElementById('num1').value);
      const num2 = parseInt(document.getElementById('num2').value);
      let lcm = (num1 * num2) / gcd(num1, num2);
      document.getElementById('result').innerText = `LCM: ${lcm}`;
    }

    // HCF (GCD) 
    function gcd(a, b) {
      if (!b) {
        return a;
      }
      return gcd(b, a % b);
    }

    function calculateHCF() {
      const num1 = parseInt(document.getElementById('num1').value);
      const num2 = parseInt(document.getElementById('num2').value);
      let hcf = gcd(num1, num2);
      document.getElementById('result').innerText = `HCF: ${hcf}`;
    }

    // AP nth term: an = a + (n-1)d
    function calculateAP() {
      const a = parseInt(document.getElementById('num1').value);
      const d = parseInt(document.getElementById('num2').value);
      const n = parseInt(document.getElementById('n').value);
      let ap = a + (n - 1) * d;
      document.getElementById('result').innerText = `AP (nth term): ${ap}`;
    }

    // GP nth term: an = a * r^(n-1)
    function calculateGP() {
      const a = parseInt(document.getElementById('num1').value);
      const r = parseInt(document.getElementById('num2').value);
      const n = parseInt(document.getElementById('n').value);
      let gp = a * Math.pow(r, n - 1);
      document.getElementById('result').innerText = `GP (nth term): ${gp}`;
    }

    // HP nth term: Reciprocal of AP
    function calculateHP() {
      const a = parseInt(document.getElementById('num1').value);
      const d = parseInt(document.getElementById('num2').value);
      const n = parseInt(document.getElementById('n').value);
      let ap = a + (n - 1) * d;
      let hp = 1 / ap;
      document.getElementById('result').innerText = `HP (nth term): ${hp}`;
    }

    // nCr = n! / (r!(n-r)!)
    function calculateNCR() {
      const n = parseInt(document.getElementById('n').value);
      const r = parseInt(document.getElementById('r').value);
      let nCr = factorial(n) / (factorial(r) * factorial(n - r));
      document.getElementById('result').innerText = `nCr: ${nCr}`;
    }

    // nPr = n! / (n-r)!
    function calculateNPR() {
      const n = parseInt(document.getElementById('n').value);
      const r = parseInt(document.getElementById('r').value);
      let nPr = factorial(n) / factorial(n - r);
      document.getElementById('result').innerText = `nPr: ${nPr}`;
    }

    // Factorial function
    function factorial(num) {
      if (num === 0 || num === 1) {
        return 1;
      }
      return num * factorial(num - 1);
    }
  </script>
</body>
</html>
